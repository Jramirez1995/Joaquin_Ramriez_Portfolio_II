[
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "The structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats.\n\n\nWarning: package 'here' was built under R version 4.3.3"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#seth-harris-contributed-to-this-exercise",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#seth-harris-contributed-to-this-exercise",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "The structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats.\n\n\nWarning: package 'here' was built under R version 4.3.3"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\nFigure 1: Height and weight stratified by gender.\n\n\n\n\n\n# Load necessary libraries\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n#Create a boxplot with the new categorical variable on the x-axis and height on the y-axis\np_boxplot&lt;-ggplot(mydata, aes(x = Occupation, y = Height)) +   geom_boxplot() +   labs(title = \"Boxplot of Height by Occupation\",        \nx = \"Occupation\",        y = \"Height\") \n#Display boxplot\nprint(p_boxplot)\n\n\n\n# Save the boxplot to a file \nggsave(\"boxplot.png\", plot = p_boxplot) \n\nSaving 7 x 5 in image\n\n# Create a scatterplot with weight on the x-axis and the new numerical variable on the y-axis \np_scatterplot&lt;-ggplot(mydata, aes(x = Weight, y = Age)) +   geom_point() +   labs(title = \"Scatterplot of Weight and Age\",        \nx = \"Weight\",        y = \"Age\") \n\n#Display scatterplot\nprint(p_scatterplot)\n\n\n\n# Save the scatterplot to a file ggsave(\"scatterplot.png\", plot = p_scatterplot)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871\n\n\n\n\n\n\n\n\n\n\nTable 3: Another linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n163.4615385\n64.914805\n2.5180933\n0.1280971\n\n\nAge\n0.5192308\n2.137083\n0.2429624\n0.8306802\n\n\nOccupationDoctor\n-14.5384615\n36.933011\n-0.3936441\n0.7318458\n\n\nOccupationEngineer\n-22.0769231\n31.984926\n-0.6902290\n0.5613871\n\n\nOccupationOccupation\n3.5576923\n36.162404\n0.0983810\n0.9306019\n\n\nOccupationStudent\n-21.4807692\n35.653647\n-0.6024845\n0.6080640\n\n\nOccupationUnemployed\n-28.1538462\n39.483050\n-0.7130616\n0.5497811"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means.\nThe boxplot of height by occupation illustrates the distribution of heights among different occupations. Each box represents the interquartile range (IQR) of heights for a given occupation, with the line inside the box indicating the median height. The whiskers extend to the minimum and maximum heights within 1.5 times the IQR from the quartiles, and any data points outside this range are considered outliers.\nFrom the boxplot: Doctors have a relatively narrow range of heights, clustered around the median, with no outliers. Engineers show a wider range of heights and a few outliers. Students, unemployed individuals, and artists have relatively consistent heights with smaller IQRs and no outliers. The variation in the range of heights among different occupations can reflect diverse physical characteristics or sampling variations within these groups.\nThe scatterplot displays the relationship between weight and age. Key observations include: There seems to be a slight downward trend, indicating that higher weights are associated with younger ages in this dataset. There are a few outliers, such as an individual weighing over 100 kg and others weighing less than 60 kg. The data points are somewhat dispersed, indicating variability in the relationship between weight and age among the individuals. This scatterplot helps in visualizing how weight and age are distributed and correlated within the dataset.\nThis table summarizes the results of a linear regression model. Here’s a brief explanation of the columns and some of the key findings:\nterm: This indicates the predictor variables in the model, including the intercept and various categories of occupation. estimate: These are the estimated coefficients for each term in the model. For example, the intercept is 163.46, which represents the expected value of the dependent variable when all predictors are zero. std.error: This column provides the standard errors for the estimates, reflecting the variability of the coefficient estimates. statistic: This is the t-statistic for each coefficient, which is the estimate divided by its standard error. p.value: The p-value tests the null hypothesis that the coefficient is equal to zero. Smaller p-values (typically less than 0.05) indicate that the coefficient is statistically significant. Key points:\nNone of the predictors, including Age and Occupation categories, have p-values less than 0.05, indicating that they are not statistically significant in predicting the dependent variable in this model. The coefficients for occupation categories show how different occupations compare to the baseline category in their relationship to the dependent variable, but these differences are not statistically significant."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/Joaquin_Ramriez_Portfolio_II\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Age             age in years                          numeric value &gt;0 or NA  \n5 Occupation      individual's occupation               Student/Engineer/Artist…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height     &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"15…\n$ Weight     &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender     &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\"…\n$ Age        &lt;dbl&gt; 25, 30, 22, 28, 40, 35, 27, 45, 19, 50, 33, 29, 41, 36\n$ Occupation &lt;chr&gt; \"Occupation\", \"Doctor\", \"Student\", \"Artist\", \"Unemployed\", …\n\nsummary(rawdata)\n\n    Height              Weight          Gender               Age       \n Length:14          Min.   :  45.0   Length:14          Min.   :19.00  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:27.25  \n Mode  :character   Median :  70.0   Mode  :character   Median :31.50  \n                    Mean   : 602.7                      Mean   :32.86  \n                    3rd Qu.:  90.0                      3rd Qu.:39.00  \n                    Max.   :7000.0                      Max.   :50.00  \n                    NA's   :1                                          \n  Occupation       \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender   Age Occupation\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;     \n1 180        80 M         25 Occupation\n2 175        70 O         30 Doctor    \n3 sixty      60 F         22 Student   \n4 178        76 F         28 Artist    \n5 192        90 NA        40 Unemployed\n6 6          55 F         35 Engineer  \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nOccupation\n0\n1\n6\n10\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.00\n70.0\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n32.86\n8.88\n19\n27.25\n31.5\n39\n50\n▆▇▆▃▃\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nOccupation\n0\n1\n6\n10\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n33.69\n8.65\n19\n28.00\n33\n40\n50\n▃▇▆▃▃\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nOccupation\n0\n1\n6\n10\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n33.69\n8.65\n19\n28.00\n33\n40\n50\n▃▇▆▃▃\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nOccupation\n0\n1\n6\n10\n0\n6\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n32.27\n7.81\n19\n27.5\n30\n38\n45\n▂▇▂▃▆\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nOccupation\n0\n1\n6\n10\n0\n6\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n32.27\n7.81\n19\n27.5\n30\n38\n45\n▂▇▂▃▆\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nOccupation\n0\n1\n6\n10\n0\n6\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nAge\n0\n1\n32.89\n6.81\n25\n28\n30\n36\n45\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata2 &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata2, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda - Copy.html",
    "href": "starter-analysis-exercise/code/eda-code/eda - Copy.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/Joaquin_Ramriez_Portfolio_II\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Occupation            0             1   6  10     0        6          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean    sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0  133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2   45  55  70  80  110 ▇▂▃▂▂\n3 Age                   0             1  32.9  6.81  25  28  30  36   45 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n# Load necessary libraries\nlibrary(ggplot2)\n#Create a boxplot with the new categorical variable on the x-axis and height on the y-axis\np_boxplot&lt;-ggplot(mydata, aes(x = Occupation, y = Height)) +   geom_boxplot() +   labs(title = \"Boxplot of Height by Occupation\",        \nx = \"Occupation\",        y = \"Height\") \n#Display boxplot\nprint(p_boxplot)\n\n\n\n# Save the boxplot to a file \nggsave(\"boxplot.png\", plot = p_boxplot) \n\nSaving 7 x 5 in image\n\n# Create a scatterplot with weight on the x-axis and the new numerical variable on the y-axis \np_scatterplot&lt;-ggplot(mydata, aes(x = Weight, y = Age)) +   geom_point() +   labs(title = \"Scatterplot of Weight and Age\",        \nx = \"Weight\",        y = \"Age\") \n\n#Display scatterplot\nprint(p_scatterplot)\n\n\n\n# Save the scatterplot to a file ggsave(\"scatterplot.png\", plot = p_scatterplot)\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Placeholder file for the future data/results presentation exercise."
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Data Exercise",
    "section": "",
    "text": "Here is how the synthetic dataset is generated. The dataset consists of 100 observations and includes the following variables:\n\nlibrary(simstudy)\n\nWarning: package 'simstudy' was built under R version 4.3.3\n\nset.seed(123)\n\n# Define data structure\ndef &lt;- defData(varname = \"X1\", formula = 0, variance = 1)\ndef &lt;- defData(def, varname = \"X2\", formula = \"2*X1 + rnorm(1, mean = 0, sd = 0.5)\")\ndef &lt;- defData(def, varname = \"X3\", formula = 0, variance = 1)\ndef &lt;- defData(def, varname = \"Y\", formula = \"3*X1 + 4*X2 + 2*X3 + rnorm(1, mean = 0, sd = 1)\")\n\n# Generate data with 100 observations\ndata &lt;- genData(100, def)\n\n# Convert 'data' to data frame\ndata &lt;- as.data.frame(data)\n\n# Show the first few rows of the dataset\nhead(data)\n\n  id          X1          X2          X3         Y\n1  1 -0.56047565 -1.47615457  0.25688371 -5.759865\n2  2 -0.23017749 -0.81555826 -0.24669188 -3.133736\n3  3  1.55870831  2.76221335 -0.34754260 16.342306\n4  4  0.07050839 -0.21418650 -0.95161857 -1.236045\n5  5  0.12928774 -0.09662781 -0.04502772  1.223709\n6  6  1.71506499  3.07492669 -0.78490447 17.187506\n\n\nExploring the generated data using scatterplot matrices and correlation matrices. This helped visualize the relationships between the variables.\n\n# Scatterplot matrix\npairs(~ X1 + X2 + X3 + Y, data = data)\n\n\n\n\nScatterplot matrix:\n\nX1 vs X2: There is a strong positive linear relationship between them.\nX1 vs Y and X2 vs Y: Both scatterplots show a positive relationship, which aligns with the data generation process where Y is influenced by both X1 and X2.\nX3: There seems to be no clear linear relationship between X3 and the other variables X1 and X2. However, there is a positive relationship between X3 and Y.\nY: The variable Y shows a linear relationship with X1, X2, and to X3.\nX1 and X2 are strongly correlated. Y is influenced by X1, X2, and X3, with X1 and X2 having a more apparent impact on Y.\n\n\n# Correlation matrix\nprint(cor(data))\n\n           id           X1           X2           X3         Y\nid 1.00000000  0.079808324  0.079808324  0.123034289 0.1022722\nX1 0.07980832  1.000000000  1.000000000 -0.006486112 0.9809823\nX2 0.07980832  1.000000000  1.000000000 -0.006486112 0.9809823\nX3 0.12303429 -0.006486112 -0.006486112  1.000000000 0.1877305\nY  0.10227216  0.980982268  0.980982268  0.187730530 1.0000000\n\n\nCorrelation Matrix:\n\nHigh correlation between X1 and X2.\nLow correlations between X3 and the other variables (except Y) are expected since X3 was generated independently.\n\nModel Fitting:\nTwo linear regression models.\n\n# Fit linear regression model\nmodel1 &lt;- lm(Y ~ X1, data = data)\nprint(summary(model1))\n\n\nCall:\nlm(formula = Y ~ X1, data = data)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-3.938 -1.435 -0.244  1.192  6.633 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  -0.2640     0.2004  -1.317    0.191    \nX1           10.9859     0.2196  50.033   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.994 on 98 degrees of freedom\nMultiple R-squared:  0.9623,    Adjusted R-squared:  0.9619 \nF-statistic:  2503 on 1 and 98 DF,  p-value: &lt; 2.2e-16\n\n\nSimple Linear Regression:\nModel with Y as the response variable and X1 as the predictor. The simple linear regression model with Y ~ X1 showed a significant relationship between Y and X1. However, the model’s fit may not capture all the variability in Y due to the omission of X2 and X3\n\n# Fit multiple linear regression model\nmodel2 &lt;- lm(Y ~ X1 + X2 + X3, data = data)\nprint(summary(model2))\n\nWarning in summary.lm(model2): essentially perfect fit: summary may be\nunreliable\n\n\n\nCall:\nlm(formula = Y ~ X1 + X2 + X3, data = data)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-2.702e-15 -8.811e-16  1.000e-17  4.697e-16  1.338e-14 \n\nCoefficients: (1 not defined because of singularities)\n              Estimate Std. Error    t value Pr(&gt;|t|)    \n(Intercept) -1.084e-01  1.917e-16 -5.654e+14   &lt;2e-16 ***\nX1           1.100e+01  2.094e-16  5.253e+16   &lt;2e-16 ***\nX2                  NA         NA         NA       NA    \nX3           2.000e+00  1.927e-16  1.038e+16   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.902e-15 on 97 degrees of freedom\nMultiple R-squared:      1, Adjusted R-squared:      1 \nF-statistic: 1.43e+33 on 2 and 97 DF,  p-value: &lt; 2.2e-16\n\n\nMultiple Linear Regression:\nModel with Y as the response variable and X1, X2, and X3 as predictors. The multiple linear regression model with Y ~ X1 + X2 + X3 showed significant relationships between Y and all predictors (X1, X2, and X3). The coefficients were close to the values used in the data generation process:\n\nCoefficient for X1 was close to 3.\nCoefficient for X2 was close to 4.\nCoefficient for X3 was close to 2.\n\nThe residuals plot indicated a good fit for the multiple linear regression model, with no major patterns observed in the residuals.\nNow I will examine the residuals of the multiple linear regression model to check the model fit.\n\n# Plotting residuals to check model fit\npar(mfrow = c(2, 2))\nplot(model2)\n\n\n\n\nSummary:\n\nLinearity: The residuals-fitted plot suggests the linearity assumption is met.\nNormality: The Q-Q plot indicates that the residuals are normally distributed.\nHomoscedasticity: Both the residuals-fitted and scale-location plots suggest that variance is constant.\nInfluential Points: The residuals-leverage plot indicates the presence of some influential points."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "CDC Data Exercise",
    "section": "",
    "text": "The dataset “Potentially Excess Deaths from the Five Leading Causes of Death” offers a detailed look at how many deaths in different areas of the U.S. Essentially, it highlights how many deaths occurred and what expected. In addition we are also provided with this following information:\nUnderlying cause of death is based on the International Classification of Diseases, and are as follows:\n\nHeart disease (I00-I09, I11, I13, and I20–I51)\nCancer (C00–C97)\nUnintentional injury (V01–X59 and Y85–Y86)\nChronic lower respiratory disease (J40–J47)\nStroke (I60–I69)\nLocality (nonmetropolitan vs. metropolitan).\nCDC’s Potentially Excess Deaths webpage\nThe dataset has 206k rows.\n13 columns:\n\nYear: The year of the data record - 2005 through 2015.\nCause of Death: Primary cause of death based on ICD-10 codes.\nState: U.S. state where deaths occurred.\nLocality: Classification as nonmetropolitan or metropolitan.\nObserved Deaths: Actual number of deaths.\nExpected Deaths: Number of deaths expected based on benchmark rates.\nPotentially Excess Deaths: Deaths exceeding expected numbers.\nPercent Potentially Excess Deaths: Percentage of deaths exceeding expectations."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#dataset-overview",
    "href": "cdcdata-exercise/cdcdata-exercise.html#dataset-overview",
    "title": "CDC Data Exercise",
    "section": "",
    "text": "The dataset “Potentially Excess Deaths from the Five Leading Causes of Death” offers a detailed look at how many deaths in different areas of the U.S. Essentially, it highlights how many deaths occurred and what expected. In addition we are also provided with this following information:\nUnderlying cause of death is based on the International Classification of Diseases, and are as follows:\n\nHeart disease (I00-I09, I11, I13, and I20–I51)\nCancer (C00–C97)\nUnintentional injury (V01–X59 and Y85–Y86)\nChronic lower respiratory disease (J40–J47)\nStroke (I60–I69)\nLocality (nonmetropolitan vs. metropolitan).\nCDC’s Potentially Excess Deaths webpage\nThe dataset has 206k rows.\n13 columns:\n\nYear: The year of the data record - 2005 through 2015.\nCause of Death: Primary cause of death based on ICD-10 codes.\nState: U.S. state where deaths occurred.\nLocality: Classification as nonmetropolitan or metropolitan.\nObserved Deaths: Actual number of deaths.\nExpected Deaths: Number of deaths expected based on benchmark rates.\nPotentially Excess Deaths: Deaths exceeding expected numbers.\nPercent Potentially Excess Deaths: Percentage of deaths exceeding expectations."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#loading-and-cleaning-the-data",
    "href": "cdcdata-exercise/cdcdata-exercise.html#loading-and-cleaning-the-data",
    "title": "CDC Data Exercise",
    "section": "Loading and Cleaning the Data",
    "text": "Loading and Cleaning the Data\nWe first begin by loading and cleaning the dataset.\n\n# Load necessary libraries\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readr)\nlibrary(RColorBrewer)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Set the working directory to the project directory\ndata &lt;- here::here(\"cdcdata-exercise\",\"NCHS_-_Five_Leading_Causes_of_Death.csv\")\n# Define the file path and load the data\ndata &lt;- read_csv(\"NCHS_-_Five_Leading_Causes_of_Death.csv\")\n\nRows: 205920 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): Cause of Death, State, State FIPS Code, Age Range, Benchmark, Locality\ndbl (7): Year, HHS Region, Observed Deaths, Population, Expected Deaths, Pot...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Tell us the name of the columns \ncolnames(data)\n\n [1] \"Year\"                              \"Cause of Death\"                   \n [3] \"State\"                             \"State FIPS Code\"                  \n [5] \"HHS Region\"                        \"Age Range\"                        \n [7] \"Benchmark\"                         \"Locality\"                         \n [9] \"Observed Deaths\"                   \"Population\"                       \n[11] \"Expected Deaths\"                   \"Potentially Excess Deaths\"        \n[13] \"Percent Potentially Excess Deaths\"\n\n#output two newline characters\ncat(\"\\n\\n\")\n# Display the structure of the dataset\nstr(data)\n\nspc_tbl_ [205,920 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year                             : num [1:205920] 2005 2005 2005 2005 2005 ...\n $ Cause of Death                   : chr [1:205920] \"Cancer\" \"Cancer\" \"Cancer\" \"Cancer\" ...\n $ State                            : chr [1:205920] \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...\n $ State FIPS Code                  : chr [1:205920] \"AL\" \"AL\" \"AL\" \"AL\" ...\n $ HHS Region                       : num [1:205920] 4 4 4 4 4 4 4 4 4 4 ...\n $ Age Range                        : chr [1:205920] \"0-49\" \"0-49\" \"0-49\" \"0-49\" ...\n $ Benchmark                        : chr [1:205920] \"2005 Fixed\" \"2005 Fixed\" \"2005 Fixed\" \"2010 Fixed\" ...\n $ Locality                         : chr [1:205920] \"All\" \"Metropolitan\" \"Nonmetropolitan\" \"All\" ...\n $ Observed Deaths                  : num [1:205920] 756 556 200 756 556 ...\n $ Population                       : num [1:205920] 3148377 2379871 768506 3148377 2379871 ...\n $ Expected Deaths                  : num [1:205920] 451 341 111 421 318 103 451 341 111 784 ...\n $ Potentially Excess Deaths        : num [1:205920] 305 217 89 335 238 97 305 217 89 562 ...\n $ Percent Potentially Excess Deaths: num [1:205920] 40.3 39 44.5 44.3 42.8 48.5 40.3 39 44.5 41.8 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   `Cause of Death` = col_character(),\n  ..   State = col_character(),\n  ..   `State FIPS Code` = col_character(),\n  ..   `HHS Region` = col_double(),\n  ..   `Age Range` = col_character(),\n  ..   Benchmark = col_character(),\n  ..   Locality = col_character(),\n  ..   `Observed Deaths` = col_double(),\n  ..   Population = col_double(),\n  ..   `Expected Deaths` = col_double(),\n  ..   `Potentially Excess Deaths` = col_double(),\n  ..   `Percent Potentially Excess Deaths` = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\ncat(\"\\n\\n\")\n# Check for missing values\ncolSums(is.na(data))\n\n                             Year                    Cause of Death \n                                0                                 0 \n                            State                   State FIPS Code \n                                0                                 0 \n                       HHS Region                         Age Range \n                                0                                 0 \n                        Benchmark                          Locality \n                                0                                 0 \n                  Observed Deaths                        Population \n                            10212                              5280 \n                  Expected Deaths         Potentially Excess Deaths \n                            10212                             10212 \nPercent Potentially Excess Deaths \n                            10212 \n\ncat(\"\\n\\n\")\n# Remove rows with NA values\ndata_cleaned &lt;- data %&gt;%\n  drop_na()\n\n# Display the structure of the cleaned dataset\nstr(data_cleaned)\n\ntibble [195,708 × 13] (S3: tbl_df/tbl/data.frame)\n $ Year                             : num [1:195708] 2005 2005 2005 2005 2005 ...\n $ Cause of Death                   : chr [1:195708] \"Cancer\" \"Cancer\" \"Cancer\" \"Cancer\" ...\n $ State                            : chr [1:195708] \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...\n $ State FIPS Code                  : chr [1:195708] \"AL\" \"AL\" \"AL\" \"AL\" ...\n $ HHS Region                       : num [1:195708] 4 4 4 4 4 4 4 4 4 4 ...\n $ Age Range                        : chr [1:195708] \"0-49\" \"0-49\" \"0-49\" \"0-49\" ...\n $ Benchmark                        : chr [1:195708] \"2005 Fixed\" \"2005 Fixed\" \"2005 Fixed\" \"2010 Fixed\" ...\n $ Locality                         : chr [1:195708] \"All\" \"Metropolitan\" \"Nonmetropolitan\" \"All\" ...\n $ Observed Deaths                  : num [1:195708] 756 556 200 756 556 ...\n $ Population                       : num [1:195708] 3148377 2379871 768506 3148377 2379871 ...\n $ Expected Deaths                  : num [1:195708] 451 341 111 421 318 103 451 341 111 784 ...\n $ Potentially Excess Deaths        : num [1:195708] 305 217 89 335 238 97 305 217 89 562 ...\n $ Percent Potentially Excess Deaths: num [1:195708] 40.3 39 44.5 44.3 42.8 48.5 40.3 39 44.5 41.8 ..."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#visualizations-and-exploratory-data-analysis",
    "href": "cdcdata-exercise/cdcdata-exercise.html#visualizations-and-exploratory-data-analysis",
    "title": "CDC Data Exercise",
    "section": "Visualizations and Exploratory Data Analysis",
    "text": "Visualizations and Exploratory Data Analysis\n1) Summary statistics for variables.\n\n# Summary statistics for data \nsummary(data)\n\n      Year      Cause of Death        State           State FIPS Code   \n Min.   :2005   Length:205920      Length:205920      Length:205920     \n 1st Qu.:2007   Class :character   Class :character   Class :character  \n Median :2010   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2010                                                           \n 3rd Qu.:2013                                                           \n Max.   :2015                                                           \n                                                                        \n   HHS Region      Age Range          Benchmark           Locality        \n Min.   : 0.000   Length:205920      Length:205920      Length:205920     \n 1st Qu.: 3.000   Class :character   Class :character   Class :character  \n Median : 5.000   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 5.231                                                           \n 3rd Qu.: 8.000                                                           \n Max.   :10.000                                                           \n                                                                          \n Observed Deaths    Population        Expected Deaths \n Min.   :    10   Min.   :    55536   Min.   :     2  \n 1st Qu.:   155   1st Qu.:   682826   1st Qu.:    92  \n Median :   508   Median :  1610936   Median :   298  \n Mean   :  2975   Mean   :  7008421   Mean   :  2113  \n 3rd Qu.:  1586   3rd Qu.:  4681585   3rd Qu.:  1019  \n Max.   :493526   Max.   :315131659   Max.   :465126  \n NA's   :10212    NA's   :5280        NA's   :10212   \n Potentially Excess Deaths Percent Potentially Excess Deaths\n Min.   :     0.0          Min.   : 0.00                    \n 1st Qu.:    41.0          1st Qu.:20.90                    \n Median :   159.0          Median :35.80                    \n Mean   :   875.1          Mean   :35.73                    \n 3rd Qu.:   543.0          3rd Qu.:50.10                    \n Max.   :175703.0          Max.   :85.30                    \n NA's   :10212             NA's   :10212                    \n\ncat(\"\\n\\n\")\n# Summary statistics for cleaned data\nsummary(data_cleaned)\n\n      Year      Cause of Death        State           State FIPS Code   \n Min.   :2005   Length:195708      Length:195708      Length:195708     \n 1st Qu.:2007   Class :character   Class :character   Class :character  \n Median :2010   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2010                                                           \n 3rd Qu.:2013                                                           \n Max.   :2015                                                           \n   HHS Region    Age Range          Benchmark           Locality        \n Min.   : 0.0   Length:195708      Length:195708      Length:195708     \n 1st Qu.: 3.0   Class :character   Class :character   Class :character  \n Median : 5.0   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 5.3                                                           \n 3rd Qu.: 8.0                                                           \n Max.   :10.0                                                           \n Observed Deaths    Population        Expected Deaths \n Min.   :    10   Min.   :    55536   Min.   :     2  \n 1st Qu.:   155   1st Qu.:   724049   1st Qu.:    92  \n Median :   508   Median :  1704462   Median :   298  \n Mean   :  2975   Mean   :  7177289   Mean   :  2113  \n 3rd Qu.:  1586   3rd Qu.:  4783958   3rd Qu.:  1019  \n Max.   :493526   Max.   :315131659   Max.   :465126  \n Potentially Excess Deaths Percent Potentially Excess Deaths\n Min.   :     0.0          Min.   : 0.00                    \n 1st Qu.:    41.0          1st Qu.:20.90                    \n Median :   159.0          Median :35.80                    \n Mean   :   875.1          Mean   :35.73                    \n 3rd Qu.:   543.0          3rd Qu.:50.10                    \n Max.   :175703.0          Max.   :85.30                    \n\n\n2) Visualization of trends over time for causes of death.\n\n# Define a color palette\ncolors &lt;- c(\"Heart Disease\" = \"red\", \n            \"Cancer\" = \"blue\", \n            \"Chronic Lower Respiratory Disease\" = \"darkgreen\", \n            \"Stroke\" = \"orange\", \n            \"Unintentional Injury\" = \"grey\")\n\n# Aggregate data by Year and Cause of Death, excluding \"United States\"\nannual_totals &lt;- data_cleaned %&gt;%\n  filter(State != \"United States\") %&gt;%\n  group_by(Year, `Cause of Death`) %&gt;%\n  summarize(Total_Observed_Deaths = sum(`Observed Deaths`, na.rm = TRUE), .groups = 'drop')\n\n# Create the time series line plot with thicker lines and formatted year labels\nggplot(annual_totals, aes(x = Year, y = Total_Observed_Deaths, color = `Cause of Death`, group = `Cause of Death`)) +\n  geom_line(linewidth = 1.2) +  # Use 'linewidth' for line thickness\n  geom_point(size = 2) +  # Optionally, adjust point size\n  scale_x_continuous(breaks = seq(min(annual_totals$Year), max(annual_totals$Year), by = 1),  # Ensure years are whole numbers\n                     labels = scales::label_number(big.mark = \"\")) +  # Format year labels as whole numbers\n  scale_color_manual(values = colors) +  # Apply custom colors\n  labs(title = \"Deaths Over Time by Cause of Death\",\n       x = \"Year\",\n       y = \"Total Observed Deaths\") +  #  y-axis label\n  theme_minimal() +\n  theme(legend.position = \"bottom\",  # Adjust legend position if necessary\n        legend.title = element_blank(),  # Remove legend title\n        legend.key.width = unit(0.5, \"cm\"),  # Adjust legend key width\n        legend.key.height = unit(0.5, \"cm\"),  # Adjust legend key height\n        legend.text = element_text(size = 10))  # Adjust legend text size\n\n\n\n\nCauses of Death:\n\nCancer: This is the leading cause of death according to the graph, and the number of deaths has been slowly increasing over time. There appears to be a slight acceleration in the rate of increase in recent years.\nHeart Disease: Heart disease is the second leading cause of death. The number of deaths due to heart disease has fluctuated somewhat over the years, but there is a general downward trend from 2008 to 2013. Since then, there has been a slight uptick.\nUnintentional Injuries: Unintentional injuries are the third leading cause of death according to the graph. The number deaths due to unintentional injuries has been increasing steadily over time.\nChronic Lower Respiratory Disease and Stroke: Chronic lower respiratory disease and stroke have the two lowest numbers of deaths depicted in the graph. The number of deaths due to these causes appears to be relatively stable.\n\n3) Visualization: Causes of Death over time (Percentages).\n\n# Aggregate total observed deaths by Year and Cause of Death, excluding \"United States\"\nannual_totals &lt;- data_cleaned %&gt;%\n  filter(State != \"United States\") %&gt;%\n  group_by(Year, `Cause of Death`) %&gt;%\n  summarize(Total_Observed_Deaths = sum(`Observed Deaths`, na.rm = TRUE), .groups = 'drop')\n\n# Calculate total deaths by Year\ntotal_deaths_by_year &lt;- annual_totals %&gt;%\n  group_by(Year) %&gt;%\n  summarize(Total_Deaths = sum(Total_Observed_Deaths, na.rm = TRUE))\n\n# Merge the total deaths with the annual totals to calculate percentages\nannual_totals_with_percentages &lt;- annual_totals %&gt;%\n  left_join(total_deaths_by_year, by = \"Year\") %&gt;%\n  mutate(Percentage_of_Deaths = (Total_Observed_Deaths / Total_Deaths) * 100)\n\n# Reorder the Cause of Death factor levels based on total percentage\nannual_totals_with_percentages &lt;- annual_totals_with_percentages %&gt;%\n  mutate(`Cause of Death` = reorder(`Cause of Death`, Percentage_of_Deaths, FUN = sum))\n\n# Create a bar plot with percentages and labels, with reordered bars\nggplot(annual_totals_with_percentages, aes(x = Year, y = Percentage_of_Deaths, fill = `Cause of Death`)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +  # Stacked bar plot\n  geom_text(aes(label = sprintf(\"%.1f%%\", Percentage_of_Deaths), y = Percentage_of_Deaths), \n            position = position_stack(vjust = 0.5), size = 3.5, color = \"white\") +  # Add percentage labels inside bars\n  labs(title = \"Percentage of Observed Deaths by Cause of Death Over Time\",  # Update title\n       x = \"Year\",\n       y = \"Percentage of Total Deaths\") +\n  scale_x_continuous(breaks = seq(min(annual_totals_with_percentages$Year), max(annual_totals_with_percentages$Year), by = 1), \n                     labels = scales::label_number(big.mark = \"\")) +  # Format year labels\n  scale_fill_manual(values = colors) +  # Apply custom colors\n  theme_minimal() +\n  theme(legend.position = \"bottom\",  # Adjust legend position if necessary\n        legend.title = element_blank(),  # Remove legend title\n        legend.key.width = unit(0.5, \"cm\"),  # Adjust legend key width\n        legend.key.height = unit(0.5, \"cm\"),  # Adjust legend key height\n        legend.text = element_text(size = 10))  # Adjust legend text size\n\n\n\n\nPercentage of Deaths Over Time:\n\nCancer is the leading cause of death in the United States, representing around 40% of total deaths from the top 5 causes.\nHeart Disease is the second leading cause of death (after cancer). The graph shows a slight decrease in the percentage of deaths due to heart disease over time.\nUnintentional Injuries the graph shows a slight increase in the percentage of deaths due to unintentional injuries, meaning more deaths have occurred from unintentional causes over time.\nChronic Lower Respiratory Disease the graph suggests a slight increase in deaths due to chronic lower respiratory disease.\nStroke appears to have the lowest percentage of deaths among the top causes depicted in the graph. The percentage has remained relatively stable over time, with a possible slight decrease.\n\nOverall, the graph shows the percentage of deaths by cause over time. The leading causes of death are cancer and heart disease, but the percentage of deaths due to these causes is slowly decreasing. Deaths due to unintentional injuries show a slight upward trend, while chronic lower respiratory disease and stroke show a stable or slightly increasing percentage of deaths.\n4) Visualization: Causes of death by state.\n\n# Exclude rows where State is \"United States\" and Total_Observed_Deaths is below 650,000\nstate_observed_deaths &lt;- data_cleaned %&gt;%\n  filter(State != \"United States\") %&gt;%\n  group_by(State) %&gt;%\n  summarize(Total_Observed_Deaths = sum(`Observed Deaths`, na.rm = TRUE)) %&gt;%\n  filter(Total_Observed_Deaths &gt;= 650000) %&gt;%  # Filter out states with less than 650,000 observed deaths\n  arrange(desc(Total_Observed_Deaths))\n\n# Plotting the state-wise distribution of observed deaths excluding United States\nggplot(state_observed_deaths, aes(x = reorder(State, -Total_Observed_Deaths), y = Total_Observed_Deaths)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\", width = 0.7) +  # Adjust bar width as needed\n  labs(title = \"Total Observed Deaths by State (Excluding United States)\",\n       x = \"State\",\n       y = \"Total Observed Deaths\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))  # Adjust angle and size\n\n\n\n\nHere are the top ten states with the most deaths according to the graph:\n\nCalifornia\nTexas\nFlorida 4.New York\nPennsylvania\nOhio\nIllinois\nMichigan\nNorth Carolina\nGeorgia\n\nIntrigued by this, we will now dive deeper and explore the leading cause of death in these top 10 states. This will help provide and understanding mortality patterns across the country.\n\n# Specify the states of interest\nstates_of_interest &lt;- c(\"California\", \"Texas\", \"Florida\", \"New York\", \"Pennsylvania\", \n                        \"Ohio\", \"Illinois\", \"Michigan\", \"North Carolina\", \"Georgia\")\n\n# Filter data for specified states and calculate percentages by cause of death\nstate_cause_percentages &lt;- data_cleaned %&gt;%\n  filter(State %in% states_of_interest) %&gt;%\n  group_by(State, `Cause of Death`) %&gt;%\n  summarize(Percentage = sum(`Observed Deaths`) / sum(data_cleaned$`Observed Deaths`) * 100, .groups = 'drop') %&gt;%\n  arrange(State, desc(Percentage))  # Arrange by State and descending Percentage\n\n# Plotting separate bar plots for each state showing percentage distribution of causes of death\nplots_list &lt;- lapply(states_of_interest, function(state) {\n  state_data &lt;- state_cause_percentages %&gt;%\n    filter(State == state) %&gt;%\n    arrange(desc(Percentage))  # Sort within each state from highest to lowest percentage\n  \n  ggplot(state_data, aes(x = reorder(`Cause of Death`, -Percentage), y = Percentage, fill = `Cause of Death`)) +\n    geom_bar(stat = \"identity\", width = 0.7) +  # Bar plot\n    geom_text(aes(label = sprintf(\"%.1f%%\", Percentage), y = Percentage), \n              position = position_stack(vjust = 0.5), size = 3.5, color = \"white\") +  # Add percentage labels inside bars\n    labs(title = paste(\"Distribution of Causes of Death in\", state),\n         x = \"Cause of Death\",\n         y = \"Percentage\") +\n    scale_fill_manual(values = colors) +  # Apply custom colors\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels if needed\n          plot.title = element_text(hjust = 0.5))  # Center title horizontally\n})\n\n# Print each plot separately\nfor (i in seq_along(plots_list)) {\n  print(plots_list[[i]])\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCalifornia\n\n\nCancer: 2%\nHeart Disease: 1.4%\nUnintentional Injury: 0.7%\nChronic Lower Respiratory Disease: 0.3%\nStroke: 0.3%\n\n\nTexas\n\n\nCancer: 1.4%\nHeart Disease: 1.1%\nUnintentional Injury: 0.6%\nChronic Lower Respiratory Disease: 0.2%\nStroke:0.2%\n\n\nFlorida\n\n\nCancer: 1.4%\nHeart Disease: 1.0%\nUnintentional Injury: 0.5%\nChronic Lower Respiratory Disease:0.2%\nStroke: 0.2%\n\n4.New York:\n\nCancer: 1.3%\nHeart Disease: 0.9%\nUnintentional Injury: 0.3%\nChronic Lower Respiratory Disease: 0.2%\nStroke: 0.1%\n\n\nPennsylvania\n\n\nCancer: 1.0%\nHeart Disease: 0.7%\nUnintentional Injury: 0.4%\nChronic Lower Respiratory Disease: 0.1%\nStroke: 0.1%\n\n\nOhio\n\n\nCancer: 0.9%\nHeart Disease: 0.7%\nUnintentional Injury: 0.3%\nChronic Lower Respiratory Disease: 0.2%\nStroke: 0.1%\n\n\nIllinois\n\n\nCancer: 0.9%\nHeart Disease: 0.6%\nUnintentional Injury: 0.3%\nChronic Lower Respiratory Disease: 0.1%\nStroke: 0.1%\n\n\nMichigan\n\n\nCancer: 0.7%\nHeart Disease: 0.6%\nUnintentional Injury: 0.2%\nChronic Lower Respiratory Disease: 0.1%\nStroke: 0.1%\n\n\nNorth Carolina\n\n\nCancer: 0.7%\nHeart Disease: 0.5%\nUnintentional Injury: 0.3%\nChronic Lower Respiratory Disease: 0.1%\nStroke: 0.1%\n\n\nGeorgia\n\n\nCancer: 0.6%\nHeart Disease: 0.5%\nUnintentional Injury: 0.3%\nChronic Lower Respiratory Disease: 0.1%\nStroke: 0.1%"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#conclusion",
    "href": "cdcdata-exercise/cdcdata-exercise.html#conclusion",
    "title": "CDC Data Exercise",
    "section": "Conclusion:",
    "text": "Conclusion:\nThe analysis of data from 2005 to 2015 reveals that Cancer is the leading cause of death, steadily rising over the years. Heart Disease follows, showing a slight decrease until 2013, and then a slight increase. Unintentional Injuries are continuously rising, presenting a growing public health concern. State-wise, California, Texas, and Florida report the highest number of deaths, with Cancer and Heart Disease consistently ranking at the top across all states analyzed.\nAlthough deaths from Chronic Lower Respiratory Disease and Stroke remained stable from 2005 to 2015, any small increases in these areas should be watched closely to prevent them from becoming bigger health problems. The steady rise in deaths from Unintentional Injuries shows a need for targeted public health efforts and preventive measures to reduce these incidents. The state-by-state analysis reveals that Cancer and Heart Disease are the leading causes of death in all states, but the differences between states might be influenced by other factors. The visualizations and summary statistics highlight important trends and patterns and are valuable tools for policymakers.\nFuture research could look into underlying factors like demographics, policies, and access to affordable healthcare behind the trends seen in Cancer, Heart Disease, and Unintentional Injuries. A deeper understanding of these factors can lead to better health policies and interventions."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Over the years, through my work and academic experiences, I have learned to overcome challenges by focusing on aspects within my control. I recently realized that there is a difference between simple and easy: simple is not complicated, while easy means it requires little effort. My approach is simple: step out in faith and take that first step. When I get there, I will look back and wonder why it took me so long to start.\nI am blessed with a supportive family, friends, and a community of like-minded individuals. We are not meant to walk this life alone; the beauty of life lies in sharing the little moments with those dear to us. I have the opportunity to develop my career as a Data Analyst, learning consumer behaviorism, conducting price shops to gather competitive market pricing and provide suggestions, and developing charts, graphs, and reports to convey relevant metrics.\nIn the Spring of 2021, I earned my Bachelor of Science in Mathematics from the University of Texas at San Antonio, and I am currently enrolled in the Data Analytics Master’s program, scheduled to graduate in Spring 2025.\nThrough my work and academic experience, I have become proficient in data analysis and interpretation using Tableau and RStudio, and I am currently expanding my proficiency in Python, GRTL, and SAS(SQL). Additionally, I am skilled with Microsoft Office tools, including Excel, Word, PowerPoint, and Access. I possess strong communication skills in both English and Spanish. I am detail-oriented, able to reason logically, and prioritize efficiently. I am a quick learner with a passion for continuous self-improvement, demonstrating initiative and eagerness to learn. I also have proficient problem-solving skills.\nI am originally from a small town called Marble Falls in the Hill Country and moved to San Antonio in January 2017. I try to take advantage of everything the city offers. When I am not working on my academics or career, you are likely to find me spending time with my family, exploring the rich history of the city, and eating its authentic food.\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nLearn more about Data Analytics - Data Camp"
  },
  {
    "objectID": "aboutme.html#background",
    "href": "aboutme.html#background",
    "title": "About me",
    "section": "",
    "text": "Over the years, through my work and academic experiences, I have learned to overcome challenges by focusing on aspects within my control. I recently realized that there is a difference between simple and easy: simple is not complicated, while easy means it requires little effort. My approach is simple: step out in faith and take that first step. When I get there, I will look back and wonder why it took me so long to start.\nI am blessed with a supportive family, friends, and a community of like-minded individuals. We are not meant to walk this life alone; the beauty of life lies in sharing the little moments with those dear to us. I have the opportunity to develop my career as a Data Analyst, learning consumer behaviorism, conducting price shops to gather competitive market pricing and provide suggestions, and developing charts, graphs, and reports to convey relevant metrics.\nIn the Spring of 2021, I earned my Bachelor of Science in Mathematics from the University of Texas at San Antonio, and I am currently enrolled in the Data Analytics Master’s program, scheduled to graduate in Spring 2025.\nThrough my work and academic experience, I have become proficient in data analysis and interpretation using Tableau and RStudio, and I am currently expanding my proficiency in Python, GRTL, and SAS(SQL). Additionally, I am skilled with Microsoft Office tools, including Excel, Word, PowerPoint, and Access. I possess strong communication skills in both English and Spanish. I am detail-oriented, able to reason logically, and prioritize efficiently. I am a quick learner with a passion for continuous self-improvement, demonstrating initiative and eagerness to learn. I also have proficient problem-solving skills.\nI am originally from a small town called Marble Falls in the Hill Country and moved to San Antonio in January 2017. I try to take advantage of everything the city offers. When I am not working on my academics or career, you are likely to find me spending time with my family, exploring the rich history of the city, and eating its authentic food.\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nLearn more about Data Analytics - Data Camp"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "## Installing the dslabs Package from a Local File\n\n# Download the appropriate Zip file for the 'dslabs' package.\n# The exact file you need depends on your version of R.\n# In this example, the file 'dslabs_0.8.0.zip' is used, suitable for the 'r-release' version of R.\n# 'repos = NULL' tells R that the package is being installed from a local file rather than a repository.\n# 'type = \"win.binary\"' specifies that the package is a Windows binary file.\n\n# install.packages(\"C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/Joaquin_Ramriez_Portfolio_II/coding-exercise/dslabs_0.8.0.zip\", \n#                 repos = NULL, \n#                 type = \"win.binary\")\nlibrary(tidyverse)  # Loads tidyverse packages, including dplyr.\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dslabs)     # Loads the dslabs.\n\nWarning: package 'dslabs' was built under R version 4.4.0\n# This function helps access the documentation for the gapminder dataset and provides detailed information about the dataset structure, variables, and source.\nhelp(gapminder)\n\nstarting httpd help server ... done\n\n# The summary() function provides statistical summary of the dataset.Which includes minimum, first quartile, median, mean, third quartile, and maximum values for each variable.\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n# The class() function is used to determine the type of object that gapminder is.\nclass(gapminder)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing-data",
    "href": "coding-exercise/coding-exercise.html#processing-data",
    "title": "R Coding Exercise",
    "section": "Processing Data",
    "text": "Processing Data\n\ndata(\"gapminder\")  # Load the gapminder dataset from the dslabs package.\n\nafricadata &lt;- gapminder %&gt;%  # Filter the dataset to include only African countries.\n  filter(continent == \"Africa\")  # The filter() function is used to specifically focus on the African Country.\n\n\nstr(africadata)  # Check the structure of the 'africadata'.\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata)  # Get summary statistics for the 'africadata'.\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\n\nafrica_infant_life &lt;- africadata %&gt;%  # Created a new object with only infant_mortality and life_expectancy variables.\n  select(infant_mortality, life_expectancy)  # Select only the 'infant_mortality' and 'life_expectancy' columns.\n\nstr(africa_infant_life)  # Check the structure of the new 'africa_infant_life'.\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(africa_infant_life)  # Get summary statistics for the 'africa_infant_life'.\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n\n\nafrica_population_life &lt;- africadata %&gt;%  # Created another new object with only population and life_expectancy variables.\n  select(population, life_expectancy)  # Select only the 'population' and 'life_expectancy' columns.\n\nstr(africa_population_life)  # Check the structure of the 'africa_population_life'.\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(africa_population_life)  # Get summary statistics for the 'africa_population_life'.\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#analyzing-relationships-in-african-countries-data-plotting",
    "href": "coding-exercise/coding-exercise.html#analyzing-relationships-in-african-countries-data-plotting",
    "title": "R Coding Exercise",
    "section": "Analyzing Relationships in African Countries’ Data (Plotting)",
    "text": "Analyzing Relationships in African Countries’ Data (Plotting)\n\n# Plotting life expectancy against infant mortality.\nplot(africa_infant_life$infant_mortality, africa_infant_life$life_expectancy,\n     xlab = \"Infant Mortality\", ylab = \"Life Expectancy\",\n     main = \"Life Expectancy vs Infant Mortality in African Countries\",\n     pch = 16, col = \"blue\")\n\n\n\n# Plotting life expectancy against population size (log scale x-axis).\nplot(africa_population_life$population, africa_population_life$life_expectancy,\n     xlab = \"Population Size\", ylab = \"Life Expectancy\",\n     main = \"Life Expectancy vs Population Size in African Countries\",\n     pch = 16, col =\"red\",\n     log = \"x\")  # Setting x-axis to log scale.\n\n\n\n\nThe streaks observed in the population vs life expectancy. - The dataset ‘africadata’ includes observations from different regions represented by multiple data points. - Countries with larger populations tend to have better resources.\nThe negative correlation between infant mortality and life expectancy is higher. - Infant mortality rates tend to be associated with lower life expectancies. - Countries with higher infant mortality rates often face challenges in healthcare, sanitation, and nutrition.\nBoth visualizations highlight important demographic and health trends in Africans. Presenting both challenges and potential areas for improvement.\n\nYear 2000 from African Countries Data (More Data Processing)\n\n# Check for missing values (NA) in the 'infant_mortality' variable in africadata.\nmissing_infant_mortality &lt;- table(is.na(africadata$infant_mortality))\nmissing_infant_mortality\n\n\nFALSE  TRUE \n 2681   226 \n\n\nFiltering Data for the Year 2000\n\n# Identify years with missing data for infant mortality.\nyears_with_missing &lt;- unique(africadata$year[is.na(africadata$infant_mortality)])\nyears_with_missing\n\n [1] 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974\n[16] 1975 1976 1977 1978 1979 1980 1981 2016\n\n# Selecting year 2000\nyear_selected &lt;- 2000\n\n# Filter dataset to include only data for the year 2000.\nafricadata_2000 &lt;- africadata %&gt;% \n  filter(year == year_selected)\n\n# Display the structure of the new object to verify it contains 51 observations and 9 variables.\nstr(africadata_2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n# Get a statistical summary of the new object.\nsummary(africadata_2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting-life-expectancy-against-infant-mortality---year-2000-more-plotting",
    "href": "coding-exercise/coding-exercise.html#plotting-life-expectancy-against-infant-mortality---year-2000-more-plotting",
    "title": "R Coding Exercise",
    "section": "Plotting Life Expectancy against Infant Mortality - Year 2000 (More Plotting)",
    "text": "Plotting Life Expectancy against Infant Mortality - Year 2000 (More Plotting)\n\n# Plotting life expectancy against infant mortality for year 2000.\nplot(africadata_2000$infant_mortality, africadata_2000$life_expectancy,\n     xlab = \"Infant Mortality\", ylab = \"Life Expectancy\",\n     main = \"Life Expectancy vs Infant Mortality in African Countries (Year 2000)\",\n     pch = 16, col = \"blue\")\n\n\n\n# Plotting life expectancy against population size (log scale x-axis) for year 2000.\nplot(africadata_2000$population, africadata_2000$life_expectancy,\n     xlab = \"Population Size\", ylab = \"Life Expectancy\",\n     main = \"Life Expectancy vs Population Size in African Countries (Year 2000)\",\n     pch = 16, col = \"red\",\n     log = \"x\")  # Setting x-axis to log scale.\n\n\n\n# Applying linear regression model to explore relationships.\nmodel_infant_life &lt;- lm(life_expectancy ~ infant_mortality, data = africadata_2000)\nmodel_pop_life &lt;- lm(life_expectancy ~ population, data = africadata_2000)\n\n# Summarize the linear regression models.\nsummary(model_infant_life)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africadata_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\nsummary(model_pop_life)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africadata_2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\n\n\n\nWe observe a negative correlation between life expectancy and infant mortality, higher infant mortality rates are associated with lower life expectancies.\nThe life expectancy and population size, show no clear correlation.\nThere is a statistically significant negative relation between infant_mortality and life_expectancy in African countries for the year 2000 pvalue (2.826-08). The r-squared 0.4701, tells us that infant mortality is a strong predictor of life expectancies.\nThere is no statistically significant relation between population and life_expectancy in African countries for the year 2000 pvalue (0.6159). The r-squared (0.005176), is significantly low and does not provide us meaningful information.\n\nIn conclusion, infant mortality showed a significant negative correlation with life expectancy, population size does not appear to have a significant relationship with life expectancy in African countries based on the data from the year 2000."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#this-section-contributed-by-sri-lakshmi-sudha-ganni",
    "href": "coding-exercise/coding-exercise.html#this-section-contributed-by-sri-lakshmi-sudha-ganni",
    "title": "R Coding Exercise",
    "section": "This Section contributed by SRI LAKSHMI SUDHA GANNI",
    "text": "This Section contributed by SRI LAKSHMI SUDHA GANNI\nFor this section, I will be using he mice_weight database from dslabs.\nWe are going to examine data from an experiment to see if a high fat diet increases weight.\n1.Loading Required Libraries:\n\nlibrary('dslabs')\n#library('dplyr')\nlibrary('ggplot2')\nhelp(mice_weights)\n\n2.Get an overview of the dataset:\n\nstr(mice_weights) # List of varaibles in the dataset\n\n'data.frame':   780 obs. of  7 variables:\n $ body_weight : num  27.6 23 28.7 32.6 28.6 ...\n $ bone_density: num  0.616 0.769 0.684 0.644 0.53 ...\n $ percent_fat : num  7.26 4.95 6.02 9.54 6.99 ...\n $ sex         : Factor w/ 2 levels \"F\",\"M\": 1 1 1 1 1 1 1 1 1 1 ...\n $ diet        : Factor w/ 2 levels \"chow\",\"hf\": 1 1 1 1 1 1 1 1 1 1 ...\n $ gen         : Factor w/ 5 levels \"4\",\"7\",\"8\",\"9\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ litter      : Factor w/ 2 levels \"1\",\"2\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\n3.get summary of the dataset:\n\nsummary(mice_weights) # Summary of the mice weights dataset\n\n  body_weight     bone_density     percent_fat     sex       diet     gen     \n Min.   :18.13   Min.   :0.2708   Min.   : 2.552   F:398   chow:394   4 : 97  \n 1st Qu.:28.09   1st Qu.:0.4888   1st Qu.: 5.566   M:382   hf  :386   7 :195  \n Median :32.98   Median :0.5643   Median : 8.276                      8 :193  \n Mean   :34.08   Mean   :0.5697   Mean   : 8.594                      9 : 97  \n 3rd Qu.:39.37   3rd Qu.:0.6373   3rd Qu.:10.926                      11:198  \n Max.   :65.15   Max.   :0.9980   Max.   :22.154                              \n                 NA's   :4        NA's   :4                                   \n litter \n 1:442  \n 2:338  \n        \n        \n        \n        \n        \n\n\n4.determine the type of object that mice_weights is:\n\nclass(mice_weights) # Datatype of mice weights dataframe\n\n[1] \"data.frame\"\n\n\nData Processing: 1.Check for missing values:\n\nsum(is.na(mice_weights)) # Number of NA values in the dataset\n\n[1] 8\n\ndim(mice_weights) # Number of rows and columns in the dataset\n\n[1] 780   7\n\n\n2.removing the null values:\n\ncleaned_data &lt;- na.omit(mice_weights) # Remove rows with NA values\ndim(cleaned_data) # Number of rows and columns in the cleaned dataset\n\n[1] 776   7\n\n\nModeling of body weight by type of diet\nBoxplot of weight by diet:\n\nboxplot(cleaned_data$body_weight ~ cleaned_data$diet, xlab = \"Diet\", ylab = \"Weight\", main = \"Weight by Diet\") # Boxplot of weight by diet\n\n\n\n\nThe boxplot shows that the high fat diet mice are, on average, heavier than the mice on the control diet.\nComparing group means:\n\nt.test(cleaned_data$body_weight ~ cleaned_data$diet) # t-test comparing weight by diet\n\n\n    Welch Two Sample t-test\n\ndata:  cleaned_data$body_weight by cleaned_data$diet\nt = -9.2305, df = 709.9, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group chow and group hf is not equal to 0\n95 percent confidence interval:\n -6.193914 -4.021185\nsample estimates:\nmean in group chow   mean in group hf \n          31.53701           36.64455 \n\n\nThe t-test results show that the difference in weight between the high fat diet and control diet groups is statistically significant (p-value &lt; 0.05).\nHypothesis Testing:\n\nmodel &lt;- lm(body_weight ~ diet, data = cleaned_data)\nsummary(model)\n\n\nCall:\nlm(formula = body_weight ~ diet, data = cleaned_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18.5146  -5.5614  -0.6608   4.6654  28.5054 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  31.5370     0.3866  81.574   &lt;2e-16 ***\ndiethf        5.1075     0.5510   9.269   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.674 on 774 degrees of freedom\nMultiple R-squared:  0.09992,   Adjusted R-squared:  0.09875 \nF-statistic: 85.92 on 1 and 774 DF,  p-value: &lt; 2.2e-16\n\n\nThe linear regression model shows that the high fat diet group has a statistically significant higher weight compared to the control diet group (p-value &lt; 0.05). An intecept of 31.57 and slope of 5.1075 are observed indicating a positive correlation between high fat diet and weight.\nModeling of body weight by type of diet and sex\n\ncleaned_data |&gt; ggplot(aes(diet, (body_weight), fill = sex)) + geom_boxplot() # Boxplot of weight by diet and sex\n\n\n\n\nThe boxplot shows the distribution of weight by diet. The high fat diet group has a higher average weight compared to the control diet group, and the difference is more pronounced in males.\n\nfit &lt;- lm(body_weight ~ diet*sex, data = cleaned_data)\nsummary(fit)\n\n\nCall:\nlm(formula = body_weight ~ diet * sex, data = cleaned_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-17.745  -4.260  -0.643   3.932  33.473 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  27.8286     0.4405  63.180  &lt; 2e-16 ***\ndiethf        3.8482     0.6253   6.154 1.21e-09 ***\nsexM          7.5315     0.6277  11.998  &lt; 2e-16 ***\ndiethf:sexM   2.7263     0.8948   3.047  0.00239 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.229 on 772 degrees of freedom\nMultiple R-squared:  0.4085,    Adjusted R-squared:  0.4062 \nF-statistic: 177.7 on 3 and 772 DF,  p-value: &lt; 2.2e-16\n\n\nwe can observe that\n1.Intercept (27.8286) is the estimated average body weight for the baseline group (presumably the control diet and female sex, depending on how the factors are coded) when all other predictors are held at zero.\n2.The coefficient for dietHF (3.0000) represents the estimated difference in average body weight between the high-fat diet group and the control diet\n3.sexM (7.5315): This is the additional weight estimated for males over females, assuming all else is constant.\n4.males on dietF have an additional 2.7263 units of body weight change compared to what would be predicted by dietF and sexM alone.\n5.All predictors have very small p-values (Pr(&gt;|t|)), well below 0.05, suggesting that their effects are statistically significant. Approximately 40.85% of the variance in body weight is explained by the model."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "Welcome to my digital portfolio where I showcase my data analysis projects and insights. I’m passionate about uncovering meaningful patterns in data and turning them into actionable insights. Whether it’s exploring trends, building predictive models, or visualizing data in innovative ways, I love the journey of discovery that comes with being a data analyst.\n\nExplore Projects: Use the navigation menu above to browse through my projects. Each project offers a glimpse into my analytical skills and problem-solving approach.\nDiscover Insights: Dive into the data with me and uncover fascinating insights. From exploratory data analysis to advanced statistical modeling, I strive to extract actionable insights from complex datasets.\nConnect with Me: Have questions, feedback, or collaboration opportunities? Feel free to reach out through the contact information provided below. I’m always open to connecting with fellow data enthusiasts and professionals.\n\nLet’s embark on a data-driven journey together!\n\n\n\n\n\n\nContact Information:\nSocial Media Links:\n\n\n\n\nEmail: joaquin.dj.ramirez@gmail.com\nLinkedIn\n\n\nPhone: +1 (830) 220-0703\nGitHub"
  },
  {
    "objectID": "index.html#contact-me",
    "href": "index.html#contact-me",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "Contact Information:\nSocial Media Links:\n\n\n\n\nEmail: joaquin.dj.ramirez@gmail.com\nLinkedIn\n\n\nPhone: +1 (830) 220-0703\nGitHub"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/Joaquin_Ramriez_Portfolio_II\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/Joaquin_Ramriez_Portfolio_II\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Joaquin Ramirez",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  }
]